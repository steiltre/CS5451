!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BIT_CHUNK_SIZE	pr_radix_sort.c	/^static pr_int const BIT_CHUNK_SIZE = 4;$/;"	v	file:
BinStartIndices	pr_radix_sort.c	/^void BinStartIndices($/;"	f
CC	Makefile	/^CC = mpicc$/;"	m
CreateCommArrays	pagerank.c	/^void CreateCommArrays($/;"	f
DetermineBinSizes	pr_radix_sort.c	/^void DetermineBinSizes($/;"	f
GetChunkSize	pr_utils.c	/^int GetChunkSize($/;"	f
GetMask	pr_radix_sort.c	/^pr_int GetMask($/;"	f
GetNumChunks	pr_utils.c	/^int GetNumChunks($/;"	f
NUM_BITS	pr_radix_sort.c	/^static pr_int const NUM_BITS = 64;$/;"	v	file:
PAGERANK_ACCUMULATOR_H	pr_accum.h	2;"	d
PAGERANK_ACCUMULATOR_H	pr_accumulator.h	2;"	d
PAGERANK_GRAPH_H	pr_graph.h	2;"	d
PAGERANK_RADIX_SORT_H	pr_radix_sort.h	2;"	d
PAGERANK_UTILS_H	pr_utils.h	2;"	d
SortOnRadix	pr_radix_sort.c	/^void SortOnRadix($/;"	f
_POSIX_C_SOURCE	pr_graph.c	5;"	d	file:
binary_search	pr_utils.c	/^pr_int binary_search($/;"	f
main	pagerank.c	/^int main($/;"	f
nbrs	pr_graph.h	/^  pr_int * nbrs;$/;"	m	struct:__anon3
nedges	pr_graph.h	/^  pr_int nedges;$/;"	m	struct:__anon3
nvals	pr_accum.h	/^  pr_int nvals;$/;"	m	struct:__anon1
nvals	pr_accumulator.h	/^  pr_int nvals;$/;"	m	struct:__anon2
nvtxs	pr_graph.h	/^  pr_int nvtxs;$/;"	m	struct:__anon3
pagerank	pagerank.c	/^double * pagerank($/;"	f
pr_accum	pr_accum.h	/^} pr_accum;$/;"	t	typeref:struct:__anon1
pr_accum	pr_accumulator.h	/^} pr_accum;$/;"	t	typeref:struct:__anon2
pr_accum_add_val	pr_accum.c	/^void pr_accum_add_val($/;"	f
pr_accum_add_vtx	pr_accum.c	/^void pr_accum_add_vtx($/;"	f
pr_accum_build	pr_accum.c	/^pr_accum *  pr_accum_build($/;"	f
pr_accum_condense	pr_accum.c	/^void pr_accum_condense($/;"	f
pr_accum_free	pr_accum.c	/^void pr_accum_free($/;"	f
pr_accum_zero_vals	pr_accum.c	/^void pr_accum_zero_vals($/;"	f
pr_graph	pr_graph.h	/^} pr_graph;$/;"	t	typeref:struct:__anon3
pr_graph_free	pr_graph.c	/^void pr_graph_free($/;"	f
pr_graph_load	pr_graph.c	/^pr_graph * pr_graph_load($/;"	f
pr_int	pr_accum.h	/^typedef uint64_t pr_int;$/;"	t
pr_int	pr_accumulator.h	/^typedef uint64_t pr_int;$/;"	t
pr_int	pr_graph.h	/^typedef uint64_t pr_int;$/;"	t
pr_int	pr_radix_sort.h	/^typedef uint64_t pr_int;$/;"	t
pr_int	pr_utils.h	/^typedef uint64_t pr_int;$/;"	t
pr_mpi_int	pr_graph.h	9;"	d
radix_sort	pr_radix_sort.c	/^void radix_sort(pr_int *arr, pr_int num)$/;"	f
send_ind	pr_accum.h	/^  pr_int * send_ind;$/;"	m	struct:__anon1
send_ind	pr_accumulator.h	/^  pr_int * send_ind;$/;"	m	struct:__anon2
tedges	pr_graph.h	/^  pr_int tedges;$/;"	m	struct:__anon3
tvtxs	pr_graph.h	/^  pr_int tvtxs;$/;"	m	struct:__anon3
vals	pr_accum.h	/^  double * vals;$/;"	m	struct:__anon1
vals	pr_accumulator.h	/^  double * vals;$/;"	m	struct:__anon2
xadj	pr_graph.h	/^  pr_int * xadj;$/;"	m	struct:__anon3
